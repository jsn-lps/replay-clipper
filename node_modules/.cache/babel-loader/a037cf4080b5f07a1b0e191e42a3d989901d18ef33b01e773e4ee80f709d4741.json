{"ast":null,"code":"var _jsxFileName = \"F:\\\\coding\\\\replay-clipper\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState } from 'react';\nimport OBSWebSocket from 'obs-websocket-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(ReplayClipper, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\n\n// TESTING \nfunction ReplayClipper(props) {\n  return /*#__PURE__*/_jsxDEV(\"body\", {\n    class: \"PageWrapper\",\n    children: /*#__PURE__*/_jsxDEV(MainWindow, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 36\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 10\n  }, this);\n}\n_c2 = ReplayClipper;\nfunction MainWindow(props) {\n  var accessToken = {\n    accessToken: ''\n  };\n  let obsWebSocket = {\n    accessToken: '',\n    obsWebSocketIP: \"192.168.1.228\",\n    obsWebSocketPort: \"4455\"\n  };\n\n  // const obs = new OBSWebSocket();\n  // obs.on('ConnectionOpened', async() => {\n  //     console.log(\"DOGGIES\")\n  //     accessToken = await generateOauth(tokenURL, clientID, clientSecret, (res) => {\n  //         // set global variable to accessToken (probably shouldn't do this...)\n  //         accessToken = res.body.access_token\n  //     });\n  // })\n\n  return /*#__PURE__*/_jsxDEV(\"body\", {\n    class: \"BodyContainer\",\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {\n      obsWebSocket: obsWebSocket\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(HubTab, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 10\n  }, this);\n}\n\n// change to grid\n_c3 = MainWindow;\nfunction Navigation(_ref) {\n  let {\n    obsWebSocket: {\n      accessToken,\n      obsWebSocketIP,\n      obsWebSocketPort\n    }\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      class: \"NavBar\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        class: \"NavElement\",\n        children: [\"Hub\", accessToken]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        class: \"NavElement\",\n        children: \"Clips\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 10\n  }, this);\n}\n_c4 = Navigation;\nfunction HubTab(props) {\n  _s();\n  const [checked, setChecked] = useState(false);\n\n  // add function to change replay buffer to enabled / disabled\n  function handleReplayBufferToggleChange(event) {\n    setChecked(event.target.checked);\n    if (event.target.checked) {\n      console.log(\"enabled\");\n    } else {\n      console.log(\"disabled\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"ContentWindow\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"leftContent\",\n      children: \"BANANA\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"rightContent\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"replayBufferStatus\",\n        children: [\"Replay Buffer Status:\", /*#__PURE__*/_jsxDEV(\"label\", {\n          class: \"switch\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"toggleReplayBuffer\",\n            type: \"checkbox\",\n            checked: checked,\n            onChange: handleReplayBufferToggleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 12\n  }, this);\n}\n_s(HubTab, \"OiiR1BYWvMsLHMiD2uYkeM3TCO0=\");\n_c5 = HubTab;\nfunction ReplayBufferStatusToggle(props) {\n  function handleReplayBufferToggleChange(event) {\n    setChecked(event.target.checked);\n    if (event.target.checked) {\n      console.log(\"enabled\");\n    } else {\n      console.log(\"disabled\");\n    }\n  }\n  const toggleReplayBuffer = async () => {\n    let toggleReplayBufferData;\n    try {\n      toggleReplayBufferData = await obs.call('ToggleReplayBuffer');\n      console.log(toggleReplayBufferData);\n    } catch (error) {\n      console.error(`ERROR: ${error.code} ${error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 10\n  }, this);\n}\n_c6 = ReplayBufferStatusToggle;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"ReplayClipper\");\n$RefreshReg$(_c3, \"MainWindow\");\n$RefreshReg$(_c4, \"Navigation\");\n$RefreshReg$(_c5, \"HubTab\");\n$RefreshReg$(_c6, \"ReplayBufferStatusToggle\");","map":{"version":3,"names":["React","useState","OBSWebSocket","jsxDEV","_jsxDEV","App","className","children","ReplayClipper","fileName","_jsxFileName","lineNumber","columnNumber","_c","props","class","MainWindow","_c2","accessToken","obsWebSocket","obsWebSocketIP","obsWebSocketPort","Navigation","HubTab","_c3","_ref","_c4","_s","checked","setChecked","handleReplayBufferToggleChange","event","target","console","log","name","type","onChange","_c5","ReplayBufferStatusToggle","toggleReplayBuffer","toggleReplayBufferData","obs","call","error","code","message","_c6","$RefreshReg$"],"sources":["F:/coding/replay-clipper/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { useState } from 'react';\nimport OBSWebSocket from 'obs-websocket-js';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        \n        <ReplayClipper />\n\n\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n// TESTING \nfunction ReplayClipper(props) {\n  return <body class=\"PageWrapper\"><MainWindow/></body>;\n}\n\nfunction MainWindow(props) {\n\n  var accessToken = {\n    accessToken: ''\n  }\n\n  let obsWebSocket = {\n    accessToken: '',\n    obsWebSocketIP: \"192.168.1.228\",\n    obsWebSocketPort: \"4455\"\n\n  }\n\n\n  // const obs = new OBSWebSocket();\n  // obs.on('ConnectionOpened', async() => {\n  //     console.log(\"DOGGIES\")\n  //     accessToken = await generateOauth(tokenURL, clientID, clientSecret, (res) => {\n  //         // set global variable to accessToken (probably shouldn't do this...)\n  //         accessToken = res.body.access_token\n  //     });\n  // })\n\n\n  return <body class=\"BodyContainer\" >\n    <Navigation obsWebSocket={obsWebSocket}/>\n    <HubTab/>\n    \n    </body>;\n}\n\n\n// change to grid\nfunction Navigation({obsWebSocket: {accessToken, obsWebSocketIP, obsWebSocketPort}}) {\n  return <div>\n    <ul class=\"NavBar\">\n      <li class='NavElement'>Hub{accessToken}</li>\n      <li class='NavElement'>Clips</li>\n\n    </ul>\n  </div>\n}\n\n\n\n\n\nfunction HubTab(props) {\n\n  const [checked, setChecked] = useState(false);\n\n  // add function to change replay buffer to enabled / disabled\n  function handleReplayBufferToggleChange(event) {\n    setChecked(event.target.checked);\n    if (event.target.checked) {\n      console.log(\"enabled\")\n    } else {\n      console.log(\"disabled\")\n    }\n    \n    }\n\n    return <div class=\"ContentWindow\">\n      <div class='leftContent'>\n      BANANA\n      </div>\n\n\n      <div class='rightContent'>\n\n      {/*  replay buffer status window */}\n        <div class=\"replayBufferStatus\">Replay Buffer Status:\n        <label class=\"switch\">\n          <input name=\"toggleReplayBuffer\" type=\"checkbox\" checked={checked} onChange={handleReplayBufferToggleChange}/>\n            <span class=\"button\"></span>\n          </label>\n          </div>\n\n        <div></div>\n      </div>\n    </div>\n\n}\n\n\nfunction ReplayBufferStatusToggle (props) {\n\n  function handleReplayBufferToggleChange(event) {\n    setChecked(event.target.checked);\n      if (event.target.checked) {\n        console.log(\"enabled\")\n      } else {\n        console.log(\"disabled\")\n      }\n      \n    }  \n\n    const toggleReplayBuffer = async() => {\n      let toggleReplayBufferData\n        try {\n          toggleReplayBufferData = await obs.call('ToggleReplayBuffer');\n          console.log(toggleReplayBufferData)\n      } catch(error) {\n          console.error(`ERROR: ${error.code} ${error.message}`)\n        }\n      }\n\n  return <div>\n\n  </div>\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}